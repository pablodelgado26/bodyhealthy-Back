// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  userName String @unique
  name String
  email String @unique
  password String
  cellPhone BigInt @unique
  age Int
  sex String
  height Float
  weight Float

  imageProfile String?
  descriptionObjective String?
  restriction String?
  conditioning String?

  posts Post[]
  comments Comment[] 

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Post {
  id Int @id @default(autoincrement())
  title String @unique
  description String
  imagePost String?
  like Int @default(0)
  comment Int @default(0)

  userName String
  user User @relation(fields: [userName], references: [userName], onDelete: Cascade)
  
  comments Comment[]
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("posts")
}

model Comment {
  id Int @id @default(autoincrement())
  content String
  like Int @default(0)
  response Int @default(0)

  userName String
  user User @relation(fields: [userName], references: [userName], onDelete: Cascade)

  title String
  post Post @relation(fields: [title], references: [title], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("comments")
}


  
  
